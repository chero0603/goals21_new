@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@100..900&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap");
@import "tailwindcss";

/* tailwindcssテーマ変数マニュアル:https://tailwindcss.com/docs/theme */
/* tailwindcss関数とディレクティブマニュアル:https://tailwindcss.com/docs/functions-and-directives */

@theme {
  /* フォントにNoto Sans JPとRobotoを指定 */
  --font-base: "Noto Sans JP", "Roboto", sans-serif;
  /* プライマリーカラーにskyを指定 */
  --color-primary-50: var(--color-sky-50);
  --color-primary-100: var(--color-sky-100);
  --color-primary-200: var(--color-sky-200);
  --color-primary-300: var(--color-sky-300);
  --color-primary-400: var(--color-sky-400);
  --color-primary-500: var(--color-sky-500);
  --color-primary-600: var(--color-sky-600);
  --color-primary-700: var(--color-sky-700);
  --color-primary-800: var(--color-sky-800);
  --color-primary-900: var(--color-sky-900);
  --color-primary-950: var(--color-sky-950);
  /* アクセントカラーにyellowを指定 */
  --color-accent-50: var(--color-yellow-50);
  --color-accent-100: var(--color-yellow-100);
  --color-accent-200: var(--color-yellow-200);
  --color-accent-300: var(--color-yellow-300);
  --color-accent-400: var(--color-yellow-400);
  --color-accent-500: var(--color-yellow-500);
  --color-accent-600: var(--color-yellow-600);
  --color-accent-700: var(--color-yellow-700);
  --color-accent-800: var(--color-yellow-800);
  --color-accent-900: var(--color-yellow-900);
  --color-accent-950: var(--color-yellow-950);
}

@plugin "@iconify/tailwind4";

/* 必要なスタイルはTailwind CSSのユーティリティクラスで実現 */

/* Hero Animations */
@keyframes typewriter {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes pulse-glow {
  0%,
  100% {
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.5);
    transform: scale(1);
  }
  50% {
    box-shadow: 0 0 30px rgba(59, 130, 246, 0.8);
    transform: scale(1.02);
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-100%);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes revealFromLeft {
  from {
    clip-path: inset(0 100% 0 0);
  }
  to {
    clip-path: inset(0 0 0 0);
  }
}

.typewriter {
  overflow: hidden;
  white-space: nowrap;
  animation: typewriter 2s steps(20) 0.5s forwards;
  width: 0;
}

.fade-in-up {
  animation: fadeInUp 0.8s ease-out forwards;
}

.slide-in-left {
  animation: slideInLeft 0.8s ease-out forwards;
}

.pulse-glow {
  animation: pulse-glow 2s infinite;
}

.delay-200 {
  animation-delay: 0.2s;
}
.delay-400 {
  animation-delay: 0.4s;
}
.delay-600 {
  animation-delay: 0.6s;
}
.delay-800 {
  animation-delay: 0.8s;
}
.delay-1000 {
  animation-delay: 1s;
}

.slide-down {
  animation: slideDown 0.8s ease-out forwards;
}

.reveal-from-left {
  animation: revealFromLeft 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}
